# name: Auto-build

# on: [push, pull_request]

# jobs:
  # buildAndTestForLinuxBasedPlatforms:
    # name: Build for ${{ matrix.targetPlatform }}
    # runs-on: ubuntu-latest
    # strategy:
      # fail-fast: false
      # matrix:
        # projectPath:
          # -
        # unityVersion:
          # - 2021.3.0f1
        # targetPlatform:
          # - StandaloneLinux64 # Build a Linux 64-bit standalone.
          # - WebGL # WebGL.
    # steps:
      # - uses: actions/checkout@v2
        # with:
          # fetch-depth: 0
          # lfs: true
      # - uses: actions/cache@v2
        # with:
          # path: ${{ matrix.projectPath }}/Library
          # key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ hashFiles(matrix.projectPath) }}
          # restore-keys: |
            # Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            # Library-${{ matrix.projectPath }}-
            # Library-
      # - uses: game-ci/unity-test-runner@v2
        # id: testRunner
        # env:
          # UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        # with:
          # projectPath: ${{ matrix.projectPath }}
          # unityVersion: ${{ matrix.unityVersion }}
          # githubToken: ${{ secrets.GITHUB_TOKEN }}
      # - uses: actions/upload-artifact@v2
        # if: always()
        # with:
          # name: Test results (all modes)
          # path: ${{ steps.testRunner.outputs.artifactsPath }}
      # - uses: game-ci/unity-builder@v2
        # env:
          # UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          # UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          # UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        # with:
          # projectPath: ${{ matrix.projectPath }}
          # unityVersion: ${{ matrix.unityVersion }}
          # targetPlatform: ${{ matrix.targetPlatform }}
          # customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'
          # allowDirtyBuild: true
      # - uses: actions/upload-artifact@v2
        # with:
          # name: Build-Linux
          # path: build

  # buildForWindowsBasedPlatforms:
    # name: Build for ${{ matrix.targetPlatform }}
    # runs-on: windows-2019
    # strategy:
      # fail-fast: false
      # matrix:
        # projectPath:
          # -
        # unityVersion:
          # - 2021.3.0f1
        # targetPlatform:
          # - StandaloneWindows64 # Build a Windows 64-bit standalone.
    # steps:
      # - uses: actions/checkout@v2
        # with:
          # fetch-depth: 0
          # lfs: true
      # - uses: actions/cache@v2
        # with:
          # path: ${{ matrix.projectPath }}/Library
          # key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ hashFiles(matrix.projectPath) }}
          # restore-keys: |
            # Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            # Library-${{ matrix.projectPath }}-
            # Library-
      # - uses: game-ci/unity-builder@v2
        # env:
          # UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          # UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          # UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        # with:
          # projectPath: ${{ matrix.projectPath }}
          # unityVersion: ${{ matrix.unityVersion }}
          # targetPlatform: ${{ matrix.targetPlatform }}
          # customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'
          # allowDirtyBuild: true
      # - uses: actions/upload-artifact@v2
        # with:
          # name: Build-Windows
          # path: build/Windows
          
name: Actions ðŸ˜Ž

on: [push, pull_request]

jobs:
  buildWebGL:
    name: buildWebGL
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          allowDirtyBuild: true;

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build-WebGL
          path: build


  deployPages:
    needs: buildWebGL
    name: Deploy to Github Pages ðŸš€
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: Build-WebGL
          path: build

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: build